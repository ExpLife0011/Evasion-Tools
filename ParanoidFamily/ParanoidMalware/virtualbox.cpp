#include "virtualbox.h"
#include "Helper.h"

virtualbox::virtualbox(void)
{
}


virtualbox::~virtualbox(void)
{
}

void virtualbox::startDetect(){
	printf("========= Checks for VirtualBox =======\n");
	printf("Process Checks\n");
	checkProcess();
	printf("\n");
	
	printf("Registry Checks\n");
	checkRegistry();
	printf("\n\n");
	
	printf("File Checks\n");
	checkFile();
	printf("\n\n");

	printf("MAC Checks\n");
	checkMAC();
	printf("\n");
}

// CHECK FOR RUNNING PROCESS
void virtualbox::checkProcess(){
	Helper h;
	if(h.isProcessExists("vboxservice.exe")){
	}
	if(h.isProcessExists("vboxtray.exe")){
		printf("VM: vmtoolsd.exe exists\n");
	}
}

// TODO
void virtualbox::checkRegistry(){
	Helper h;

	if(h.isRegistryKeyExists(HKEY_LOCAL_MACHINE, TEXT("SOFTWARE\\Oracle\\VirtualBox\ Guest Addtion"))){
		printf("VirtualBox Registry: VirtualBox Guest Additions exists.\n");
	}

	if(h.isRegistryKeyExists(HKEY_LOCAL_MACHINE, TEXT("SYSTEM\\CurrentControlSet\\Services\\vboxguest"))
		|| h.isRegistryKeyExists(HKEY_LOCAL_MACHINE, TEXT("SYSTEM\\CurrentControlSet\\Services\\vboxmouse"))
		|| h.isRegistryKeyExists(HKEY_LOCAL_MACHINE, TEXT("SYSTEM\\CurrentControlSet\\Services\\vboxsf"))
		|| h.isRegistryKeyExists(HKEY_LOCAL_MACHINE, TEXT("SYSTEM\\CurrentControlSet\\Services\\vboxservice"))){
		printf("VirtualBox Registry: VirtualBox Drivers exists.\n");
	}

	wstring checkString[] = {wstring(L"vbox"), wstring(L"virualbox"), wstring(L"oracle")};
	if(h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\\"), TEXT("0"), checkString, 3)){
			printf("VirtualBox Registry: VirtualBox Disk exists.\n");
	}

	if(h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\Description\\System\\"), TEXT("SystemBiosSystem"), checkString, 3)){
		printf("VirtualBox Registry: VirtualBox BIOS exists.\n");
	}

	if(h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\Description\\System\\"), TEXT("VideoBiosSystem"), checkString, 3)){
		printf("VirtualBox Registry: VirtualBox VideoBIOS exists.\n");
	}

	if(h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 0\\Scsi bus 0\\Target Id 0\\Logical Unit Id 0"), TEXT("Identifier"), checkString, 3)
		|| h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 1\\Scsi bus 0\\Target Id 0\\Logical Unit Id 0"), TEXT("Identifier"), checkString, 3)
		|| h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 2\\Scsi bus 0\\Target Id 0\\Logical Unit Id 0"), TEXT("Identifier"), checkString, 3)
		|| h.isRegistryValue(HKEY_LOCAL_MACHINE, TEXT("HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 3\\Scsi bus 0\\Target Id 0\\Logical Unit Id 0"), TEXT("Identifier"), checkString, 3)){
		printf("VirtualBox Registry: VBox Virtual hardware exists.\n");
	}
}

void virtualbox::checkFile(){
	Helper h;
	
	std::string driverPath = "C:\\Windows\\system32\\drivers\\";
	
	// Get Program File Path
	TCHAR progFilePath[MAX_PATH];
	SHGetFolderPath(NULL, CSIDL_PROGRAM_FILES, NULL, 0, progFilePath);
	std::string programFiles = getenv("ProgramFiles");
	
	// convert to string
	std::wstring arr_w( progFilePath );
	std::string arr_s( arr_w.begin(), arr_w.end() );
	arr_s +="\\";
	
	//C:\Program Files\VMware\VMware Tools
	string virtualBoxPath = arr_s + "Oracle\\VirtualBox\\Guest Addtions\\";
	
	h.isFileExists(driverPath + "vboxmouse.sys");
	h.isFileExists(driverPath + "vboxguest.sys");
	h.isFileExists(driverPath + "vboxsf.sys");
	h.isFileExists(virtualBoxPath + "vboxcontrol.exe");
	h.isFileExists(virtualBoxPath + "vboxtray.exe");
	h.isFileExists(virtualBoxPath + "vboxvideo.sys");

}

void virtualbox::checkMAC(){
	Helper h;
	// to demonstrate some format (so later on can try to detect them)
	h.isStartWithMac("08-00-27");
	h.isStartWithMac("080027");
	h.isStartWithMac("08:00:27");
}